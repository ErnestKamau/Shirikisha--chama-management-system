"""Add role column to users

Revision ID: 96c0086aa1a6
Revises: a521e4b1f812
Create Date: 2025-08-07 11:30:36.131171

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '96c0086aa1a6'
down_revision = 'a521e4b1f812'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('loans_borrower_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('status')
        batch_op.drop_column('due_date')
        batch_op.drop_column('interest_rate')
        batch_op.drop_column('borrower_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(length=20), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('role')

    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('borrower_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('interest_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('loans_borrower_id_fkey', 'users', ['borrower_id'], ['id'])
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
